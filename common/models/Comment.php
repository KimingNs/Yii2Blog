<?php

namespace common\models;

/**
 * This is the model class for table "comment".
 *
 * @property int $id
 * @property string $content
 * @property int $status
 * @property int|null $create_time
 * @property int $userid
 * @property string $email
 * @property string|null $url
 * @property int $post_id
 * @property int $remind 0:未提醒 1：已提醒
 */
class Comment extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */

    public static function tableName()
    {
        return 'comment';
    }


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id', 'content', 'status', 'userid', 'email', 'post_id'], 'required'],
            [['id', 'status', 'create_time', 'userid', 'post_id', 'remind', 'remind'], 'integer'],
            [['content'], 'string'],
            [['email', 'url'], 'string', 'max' => 128],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => '评论ID',
            'content' => '评论内容',
            'status' => '审核状态',
            'create_time' => '评论时间',
            'userid' => '评论用户',
            'email' => '邮箱',
            'url' => 'Url',
            'post_id' => '文章ID',
            'remind' => '是否提醒',
            'post.title' => '文章标题',
        ];
    }

    public function getPost()
    {
        return $this->hasOne(Post::className(), ['id' => 'post_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStatus0()
    {
        return $this->hasOne(Commentstatus::className(), ['id' => 'status']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'userid']);
    }

    public function getBeginning()
    {
        $tmpStr = strip_tags($this->content);
        $tmpLen = mb_strlen($tmpStr);

        return mb_substr($tmpStr, 0, 20, 'utf-8') . (($tmpLen > 20) ? '...' : '');
    }

    public function approve()
    {
        $this->status = 2;//设置评论状态为已审核
        return ($this->save() ? true : false);
    }

    public static function getPengdingCommentCount()
    {
        return Comment::find()->where(['status' => 1])->count();
    }

    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            if ($insert) {
                $this->create_time = time();
            }
            return true;
        } // TODO: Change the autogenerated stub
        else return false;
    }

    public static function findRecentComments($limit = 10)
    {
        return Comment::find()->where(['status' => 2])->orderBy('create_time DESC')->limit($limit)->all();
    }
}
